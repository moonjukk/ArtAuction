<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.artauction.mapper.ListMapper">
  
  <select id="read" resultType="com.artauction.domain.UserVO">
	select * from tb_user where userId = #{userId}  
  </select>
  
	<sql id="criteria">
		<choose>
			<when test="type == 'close'.toString()">
				enddate desc,
			</when>
			<when test="type == 'open'.toString()">
				startdate desc,
			</when>
			<when test="type == 'high'.toString()">
				nowprice desc nulls last,
			</when>
			<when test="type == 'low'.toString()">
				nowprice asc nulls first,
			</when>						
		</choose>
	</sql>
  	<sql id="categoryList">
		<choose>
			<when test="categoryid == '0'.toString()">
			<!-- null 값을 주어 전체 검색 -->
			</when>
			<when test="categoryid == '1'.toString()">
				categoryid = 1 and 
			</when>
			<when test="categoryid == '2'.toString()">
				categoryid = 2 and 
			</when>
			<when test="categoryid == '3'.toString()">
				categoryid = 3 and 
			</when>
			<when test="categoryid == '4'.toString()">
				categoryid = 4 and 
			</when>
			<when test="categoryid == '5'.toString()">
				categoryid = 5 and 
			</when>
			<when test="categoryid == '99'.toString()">
				categoryid = 99 and
			</when>			
			<otherwise>
			<!-- null 값을 주어 전체 검색 -->
			</otherwise>		
		</choose>  	
  	</sql>
  	<sql id="searchList">
		<choose>
			<when test="searchList == 'goodsName'.toString()">
				gname like '%'||#{keyword}||'%' and 
			</when>
			<when test="searchList == 'seller'.toString()">
				registeruserid like '%'||#{keyword}||'%' and 
			</when>					
		</choose>  	
  	</sql>
  	
  	
  	<!-- 리스트페이징처리 -->
  	<select id="getListWithPaging" resultType="com.artauction.domain.ListVO">
		select jo.rn, jo.gno, jo.categoryid, jo.registeruserid, jo.gname, jo.startprice, jo.startdate, jo.enddate, jo.flag, jo.uploadpath, jo.filename, jo.uuid, jo.thumbnail, jo.nowprice
		from (select rownum rn, j.gno, j.categoryid, j.registeruserid, j.gname, j.startprice, j.startdate, j.enddate, j.flag, j.uploadpath, j.filename, j.uuid, j.thumbnail, j.nowprice
        	  from(select tg.gno, tg.categoryid, tg.registeruserid, tg.gname, tg.startprice, tg.startdate, tg.enddate, tg.flag, ti.uploadpath, ti.filename, ti.uuid, ti.thumbnail, MAX(tt.tprice) nowprice
                	 from tb_goods tg, tb_image ti, tb_trade tt
                	 where <include refid="categoryList"></include> <include refid="searchList"></include> tg.gno = ti.gno(+) and tg.gno = tt.gno(+) and tg.flag = '0' and ti.thumbnail = '1'
                	 group by tg.gno, tg.categoryid, tg.registeruserid, tg.gname, tg.startprice, tg.startdate, tg.enddate, tg.flag, ti.uploadpath, ti.filename, ti.uuid, ti.thumbnail
                	 order by <include refid="criteria"></include> tg.gno desc ) j
              <![CDATA[  	 
        	  where rownum<=#{pageNum}*#{amount}) jo
		where rn>(#{pageNum}-1)*#{amount}]]>
	</select>
	<!-- 리스트페이징처리 -->	
  	
  	
  	
  	<!-- 모든 거래중인 물품의 갯수 -->
  	<select id="getTotalCount" resultType="int">
		select count(*)
		from tb_goods tg, tb_image ti
		where 
		<include refid="categoryList"></include>
		<include refid="searchList"></include>	
		tg.gno = ti.gno and tg.flag='0' and ti.thumbnail = '1'
  	</select>
  	<!-- 모든 거래중인 물품의 갯수 -->
  	
  	
  	
  	<!-- 리스트카테고리 불러오기 -->
  	<select id="getListCategory" resultType="com.artauction.domain.CategoryVO">
  		select * from tb_category
  		order by categoryid
  	</select>
  	<!-- 리스트카테고리 불러오기 -->
  	
  	
  	
  	<!-- 카테고리 불러오기 -->
  	<select id="getCategory" resultType="com.artauction.domain.CategoryVO">
  		select * from tb_category
  		where categoryid = #{categoryid}
  		
  	</select>
  	<!-- 카테고리 불러오기 -->
  	
  	
  	
  	<!-- 메인페이지 추천경매 불러오기 -->
  	<select id="getRecommend" resultType="com.artauction.domain.ListVO">
  		select jo.rn, jo.gno, jo.categoryid, jo.registeruserid, jo.gname, jo.startprice, jo.startdate, jo.enddate, jo.flag, jo.uploadpath, jo.filename, jo.uuid, jo.thumbnail, jo.nowprice
		from (select rownum rn, j.gno, j.categoryid, j.registeruserid, j.gname, j.startprice, j.startdate, j.enddate, j.flag, j.uploadpath, j.filename, j.uuid, j.thumbnail, j.nowprice
        	  from(select tg.gno, tg.categoryid, tg.registeruserid, tg.gname, tg.startprice, tg.startdate, tg.enddate, tg.flag, ti.uploadpath, ti.filename, ti.uuid, ti.thumbnail, MAX(tt.tprice) nowprice
                	 from tb_goods tg, tb_image ti, tb_trade tt
                	 where tg.gno = ti.gno(+) and tg.gno = tt.gno(+) and tg.flag = '0' and ti.thumbnail = '1'
                	 group by tg.gno, tg.categoryid, tg.registeruserid, tg.gname, tg.startprice, tg.startdate, tg.enddate, tg.flag, ti.uploadpath, ti.filename, ti.uuid, ti.thumbnail
                	 order by nowprice desc nulls last, tg.gno desc ) j 
        	  <![CDATA[
        	  where rownum<=10) jo
		where rn>0]]>
  	</select>
  	<!-- 메인페이지 추천경매 불러오기 -->
  </mapper>
  